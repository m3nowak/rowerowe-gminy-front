name: Deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      # COA and ADM
      # - uses: actions/github-script@v7
      #   id: static-data-run-id
      #   with:
      #     result-encoding: string
      #     script: |
      #       const runs = await github.rest.actions.listWorkflowRuns({
      #         owner: 'm3nowak',
      #         repo: 'rowerowe_gminy',
      #         workflow_id: 'static-data.yaml',
      #         status: 'success',
      #         per_page: 1
      #       });
      #       return runs.data.workflow_runs[0].id;
      # - uses: actions/download-artifact@v4
      #   with:
      #     name: coa-and-adm
      #     path: public/static/
      #     repository: m3nowak/rowerowe_gminy
      #     run-id: ${{ steps.static-data-run-id.outputs.result }}
      # TOPOLOGY
      - uses: actions/github-script@v7
        id: geo-ddb-run-id
        with:
          result-encoding: string
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: 'm3nowak',
              repo: 'rowerowe_gminy',
              workflow_id: 'geo-ddb-build.yaml',
              status: 'success',
              per_page: 1
            });
            return runs.data.workflow_runs[0].id;
      - run: echo ${{ steps.geo-ddb-run-id.outputs.result }}
      - uses: actions/download-artifact@v4
        with:
          name: topo
          path: public/static/
          repository: m3nowak/rowerowe_gminy
          run-id: ${{ steps.geo-ddb-run-id.outputs.result }}
          github-token: ${{ secrets.ACTIONS_READ }}

      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          path: dist/rowerowe-gminy/browser
          name: dist-browser

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist/rowerowe-gminy/browser --project-name rowerowegminy
